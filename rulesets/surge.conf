[General]
# ================ iOS和MacOS共同的 Surge 参数 ================ #
# > 日志级别 verbose, info, notify, or warning 不建议在日常使用中启用详细，因为这会显著降低性能。
loglevel = notify
# > IPv6协议 启用完整的 IPv6 支持。具体来说，开启该选项后，访问域名时会查询该域名的AAAA记录。即使未启用此选项，也可以通过直接访问 IPv6 地址来访问 IPv6 站点。
ipv6 = false
# > 允许 IPv6 通过 Surge VIF。当您希望 Surge 处理连接到 IPv6 地址的原始 TCP 连接时很有用。
# > off ：切勿使用 IPv6 设置 Surge VIF
# > auto ：仅当本地网络具有有效的 IPv6 网络时，才使用 IPv6 设置 Surge VIF
# > always ：始终使用 IPv6 设置 Surge VIF
ipv6-vif = false
# > dns服务器 上游DNS服务器的IP地址
dns-server = 223.6.6.6, 223.5.5.5, 114.114.114.114, 119.29.29.29, 162.159.195.1, 180.184.1.1, system
# > 跳过代理 在 iOS 版本中，此选项强制与这些域/IP 范围的连接由 Surge VIF 而不是 Surge 代理处理。在 macOS 版本中，当启用"设置为系统代理"时，这些设置将应用于系统。此选项用于修复某些应用的兼容性问题。
# > apple.com、*apple.com、192.168.2.* or 192.168.2.0/24
# > 注意：如果输入 IP 地址或地址范围，则只有在使用该地址连接到该主机时才能绕过代理，而不能在通过解析为该地址的域名连接到主机时绕过代理。
skip-proxy = 127.0.0.1, 127.0.0.0/8,192.168.0.0/24, 172.16.0.0/12,100.64.0.0/10, 17.0.0.0/8, *.local, *.crashlytics.com, seed-sequoia.siri.apple.com, localhost, sequoia.apple.com, www.abchina.com.cn，captive.apple.com,169.254.0.0/16,192.0.0.0/24, 192.0.2.0/24, 192.168.0.0/16
# > 排除简单主机名 就像 skip-proxy 参数一样。此选项允许请求使用由 Surge VIF 而不是 Surge 代理处理的简单主机名（不带点）。
# > mysql01、redis01
exclude-simple-hostnames = true
# > 外部控制器访问 此选项允许外部控制器控制 Surge，例如 Surge Dashboard （macOS） 和 Surge iOS 遥控器 （iOS）。例如：key@0.0.0.0:6166
external-controller-access = mima1234@0.0.0.0:6166
# > 使用 HTTPS 协议而不是 HTTP。必须先配置 MitM CA 证书。您需要在客户端设备上手动安装证书。
# http-api-tls =false
# > 启用此功能后，您可以通过 Web 浏览器控制 Surge。
http-api = password@127.0.0.1:5208
http-api-web-dashboard = true
# > 显示错误页面拒绝,如果请求是纯 HTTP 请求，则显示 REJECT 策略的错误网页。
show-error-page-for-reject = true
# > Surge VIF只能处理 TCP 和 UDP 协议。使用此选项可绕过特定 IP 范围，以允许所有流量通过。
# > 注意：此选项仅适用于Surge VIF。Surge Proxy Server 处理的请求不受影响。合并 skip-proxy 并确保 tun-excluded-routes 特定 HTTP 流量绕过 Surge。
# tun-excluded-routes = 192.168.0.0/16, 10.0.0.0/8, 172.16.0.0/12
# > 默认情况下，Surge VIF 接口将自身声明为默认路由。但是，由于 Wi-Fi 接口的路由较小，因此某些流量可能无法通过浪涌 VIF 接口。使用此选项可添加较小的路由。
# tun-included-routes = 192.168.1.12/32
# > Internet 连接测试的 URL, 以及，DIRECT 策略的测试 URL
internet-test-url = http://www.bing.com
# > 代理策略的默认测试 URL
proxy-test-url = http://www.apple.com/library/test/success.html
# > 连接测试超时（秒）
test-timeout = 15
# > 始终真实的 IP 此选项要求 Surge 在 Surge VIF 处理 DNS 问题时返回真实 IP 地址而不是虚假 IP 地址 DNS数据包将被转发到上游DNS服务器 此参数属于主机列表类型，详细规则请参见：https://manual.nssurge.com/others/host-list.html
# > 使用前缀 - 排除主机名
# > 支持通配符 * 和 ?
# > 使用后缀 :port 匹配其他端口,如果未提供端口号，则 Surge 将自动为该参数附加标准端口号，就像 force-http-engine-hosts 参数一样，如果仅配置了主机名，则仅对端口 80 有效。对于 MITM 功能，它仅对端口 443 有效。
# > 使用后缀 :0 以匹配所有端口
# > 使用<ip-address> 直接使用 IPv4/IPv6 地址（而不是域）匹配所有主机名
# > -*icloud*, -*.mzstatic.com, -*.facebook.com, -*.instagram.com, -*.twitter.com, -*dropbox*, -*apple*, -*.amazonaws.com, -<ip-address>, *
always-real-ip = *.msftconnecttest.com, *.msftncsi.com, *.srv.nintendo.net, *.stun.playstation.net, xbox.*.microsoft.com, *.xboxlive.com, *.battlenet.com.cn,*.battlenet.com, *.logon.battle.net, stun.l.google.com, *.blzstatic.cn,*.battle.net
# > 劫持DNS,默认情况下，Surge 仅返回发送到 Surge DNS 地址 （198.18.0.2） 的 DNS 查询的虚假 IP 地址。发送到标准 DNS 的查询将被转发。某些设备或软件始终使用硬编码的 DNS 服务器。（例如，Google Speakers始终使用 8.8.8.8）。您可以使用此选项劫持查询以获取虚假地址。您可以使用 hijack-dns = *:53 劫持所有DNS查询
hijack-dns = 8.8.8.8:53, 8.8.4.4:53
# > 使 Surge 将 TCP 连接视为 HTTP 请求。Surge HTTP 引擎将处理请求，并且所有高级功能都将可用，例如捕获、重写和脚本编写。此参数属于主机列表类型，详细规则请参见：https://manual.nssurge.com/others/host-list.html
# force-http-engine-hosts =
# > 加密 DNS 跟随出站模式,默认情况下，加密的 DNS 查找使用直接出站。启用该选项将使 DOH 遵循出站模式设置和规则。
encrypted-dns-follow-outbound-mode = true
# > 加密的 DNS 服务器,加密的 DNS 服务器的 URL。如果配置了加密 DNS，则传统 DNS 将仅用于测试连接并解析加密 DNS URL 中的域。
encrypted-dns-server = https://doh.pub/dns-query,https://dns.alidns.com/dns-query,https://223.5.5.5/dns-query,quic://223.6.6.6:853,quic://223.5.5.5:853,https://223.6.6.6/dns-query,https://1.12.12.12/dns-query,https://120.53.53.53/dns-query
# , https://8.8.8.8/dns-query, https://1.1.1.1/dns-query
# > 跳过加密的DNS服务器证书验证，这是不安全的。
encrypted-dns-skip-cert-verification = false
# > 使用本地主机代理,默认情况下，如果使用代理策略，则始终在远程服务器上执行 DNS 查找。启用此选项后，如果存在目标域的本地 DNS 映射结果，则 Surge 会使用 IP 地址而不是域来设置代理连接。
use-local-host-item-for-proxy = false
# > 要更新的 GeoIP 数据库的 URL
geoip-maxmind-url = https://github.com/Hackl0us/GeoIP2-CN/raw/release/Country.mmdb
# > 禁用 GeoIP 数据库的自动更新
disable-geoip-db-auto-update = false
# > iOS 系统可能会执行 SVCB 记录 DNS 查找，而不是标准 A 记录查找。这会导致 Surge 无法返回虚拟 IP 地址。因此，默认情况下，禁止 SVCB 记录查找，以强制系统执行 A 记录查找。
allow-dns-svcb = false
# > UDP 流量与不支持 UDP 中继的策略匹配时的回退行为,可能的值： DIRECT 、 REJECT, 如果没有代理服务器支持 UDP 转发，可修改为「 direct 」或注释下条，但需注意同一目标主机名 TCP 请求与 UDP 请求的源地址不同所造成的隐私及安全风险。
udp-policy-not-supported-behaviour = REJECT
# > 代理的默认 UDP 测试参数, 例如： apple.com@8.8.8.8
# proxy-test-udp = apple.com@8.8.8.8
# > 当系统负载非常高且数据包处理延迟时，启用将优先处理 UDP 数据包。也称为游戏模式
udp-priority = false
# > Surge 将自动嗅探发送到端口 80 和 443 的 TCP 请求的协议，从而在优化性能的同时启用高级 HTTP/HTTPS 功能。但是，这可能会导致一些兼容性问题。如果遇到问题，可以在此处添加主机名，Surge 不会嗅探这些请求的协议。此参数属于主机列表类型，详细规则请参见：https://manual.nssurge.com/others/host-list.html
always-raw-tcp-hosts = *.baidu.com
# ================ 仅限 MacOS 的 Surge 参数 ================ #
# > 如果禁用，即使 Wi-Fi 不是主网络接口，SSID/BSSID 模式仍可匹配。
use-default-policy-if-wifi-not-primary = false
all-hybrid = false
# > 遵循 /etc/hosts 中的本地 DNS 映射项
read-etc-hosts = true
# > Surge HTTP 代理服务的端口号
http-listen = 0.0.0.0
# > Surge SOCKS5 代理服务的端口号
socks5-listen = 0.0.0.0
# > 启用 CPU 调试模式。这可能会降低性能。
debug-cpu-usage = false
# > 启用内存调试模式。这可能会降低性能。
debug-memory-usage = false
# > vif模式
# > auto ：让Surge自动选择最合适的工作模式。
# > v1 ：传统模式，TCP协议栈完全由Surge管理。由于 Surge 运行在用户空间中，这意味着每个数据包都需要从内核空间传输到用户空间进行处理。
# > v2 ：在 5.0 版本中引入，它使用 macOS 中的数据包过滤器机制，利用 macOS 的 TCP 协议栈，从而避免了在内核空间和用户空间之间切换的开销，从而显着提高了性能。但是，由于它需要修改 pf 设置，因此它与虚拟机网络和网络共享功能不兼容。
# > v3 ：在 5.2 版中引入，它绕过了数据包过滤器，并采用另一种技术来使用 macOS 的 TCP 协议栈。性能略低于 v2，但避免了因调整 pf 设置而导致的兼容性问题。
vif-mode = v3
# > 允许 Wi-Fi 访问 (仅 iOS，若允许远程访问将「false」改为「true」)
allow-wifi-access = false
# HTTP 服务端口
wifi-access-http-port = 6528
# SOCKS5 服务端口
wifi-access-socks5-port = 6582
# 允许个人热点访问
allow-hotspot-access = true
# > 增强版 Wi-Fi 助理
wifi-assist = true

[Proxy Group]
# --------------------------------
# 基础策略组
🚀 节点选择 = select,♻️ 自动选择,🇸🇬 新加坡自动,🇭🇰 香港自动,🇺🇲 美国自动,🌍 其他自动,✍️ 手动切换,DIRECT,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Global.png
♻️ 自动选择 = url-test,全球节点,interval=300,tolerance=50,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Urltest.png
✍️ 手动切换 = select,全球节点,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Static.png

# --------------------------------
# 地区策略组（按优先级）
# 时延优选
🇸🇬 新加坡自动 = select,🇸🇬 新加坡时延优选,🇸🇬 新加坡负载均衡,🇸🇬 新加坡节点,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/SG.png
🇭🇰 香港自动 = select,🇭🇰 香港时延优选,🇭🇰 香港负载均衡,🇭🇰 香港节点,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png
🇺🇲 美国自动 = select,🇺🇲 美国时延优选,🇺🇲 美国负载均衡,🇺🇲 美国节点,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/US.png
🌍 其他自动 = select,🌍 其他时延优选,🌍 其他负载均衡,🌍 其他节点,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Global.png

🇸🇬 新加坡时延优选 = url-test,🇸🇬 新加坡节点,interval=60,tolerance=80,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/SG.png
🇭🇰 香港时延优选 = url-test,🇭🇰 香港节点,interval=60,tolerance=50,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png
🇺🇲 美国时延优选 = url-test,🇺🇲 美国节点,interval=60,tolerance=190,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/US.png
🌍 其他时延优选 = url-test,🌍 其他节点,interval=60,tolerance=50,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Global.png

# 负载均衡 (Mapped to select in Surge)
🇸🇬 新加坡负载均衡 = select,🇸🇬 新加坡节点,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/SG.png
🇭🇰 香港负载均衡 = select,🇭🇰 香港节点,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png
🇺🇲 美国负载均衡 = select,🇺🇲 美国节点,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/US.png
🌍 其他负载均衡 = select,🌍 其他节点,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Global.png

# 流媒体解锁和AI解锁 (Mapped to select in Surge)
🎬 流媒体解锁 = select,流媒体解锁节点,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Streaming.png
🤖 AI解锁 = select,AI解锁节点,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Catalyst.png

# 兜底策略后备
🐟 兜底后备策略 = fallback,🇭🇰 香港自动,🇸🇬 新加坡自动,🇺🇲 美国自动,🌍 其他自动,interval=60,img-url=https://github.com/shindgewongxj/WHATSINStash/raw/main/icon/fallback.png

# --------------------------------
# 应用策略组（按优先级）
💬 OpenAi = select,🤖 AI解锁,🇺🇲 美国自动,🇸🇬 新加坡自动,🚀 节点选择,DIRECT,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Catalyst.png
🪄 迪士尼 = select,🎬 流媒体解锁,🇸🇬 新加坡自动,🚀 节点选择,✍️ 手动切换,DIRECT,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/DisneyPlus.png
🎥 Netflix = select,🎬 流媒体解锁,🇸🇬 新加坡自动,🚀 节点选择,✍️ 手动切换,DIRECT,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Netflix.png
📹 油管视频 = select,🇭🇰 香港自动,🎬 流媒体解锁,🇸🇬 新加坡自动,🚀 节点选择,✍️ 手动切换,DIRECT,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/YouTube.png
📲 电报信息 = select,🚀 节点选择,🇸🇬 新加坡自动,🇭🇰 香港自动,🇺🇲 美国自动,✍️ 手动切换,DIRECT,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Telegram.png
♫️ TikTok = select,🇸🇬 新加坡自动,🇺🇲 美国自动,🚀 节点选择,✍️ 手动切换,DIRECT,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/TikTok.png
🎶 Spotify = select,🇸🇬 新加坡自动,🇺🇲 美国自动,🚀 节点选择,✍️ 手动切换,DIRECT,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Spotify.png
🍎 苹果服务 = select,DIRECT,🇸🇬 新加坡自动,🇺🇲 美国自动,🚀 节点选择,✍️ 手动切换,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Apple.png
Ⓜ️ 微软服务 = select,🇸🇬 新加坡自动,🇺🇲 美国自动,🚀 节点选择,✍️ 手动切换,DIRECT,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Microsoft.png
🤿 GitHub = select,🇸🇬 新加坡自动,🇺🇲 美国自动,🚀 节点选择,✍️ 手动切换,DIRECT,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/GitHub.png
☁️ OneDrive = select,🇸🇬 新加坡自动,🇺🇲 美国自动,🚀 节点选择,✍️ 手动切换,DIRECT,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/OneDrive.png
🗒️ Notion = select,🇸🇬 新加坡自动,🇺🇲 美国自动,🚀 节点选择,♻️ 自动选择,✍️ 手动切换,DIRECT,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Notion.png
☁️ Cloudflare = select,🚀 节点选择,🇺🇲 美国自动,🇸🇬 新加坡自动,🇭🇰 香港自动,♻️ 自动选择,✍️ 手动切换,DIRECT,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Cloudflare.png
💨 Speedtest = select,DIRECT,🚀 节点选择,♻️ 自动选择,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Speedtest.png
💰 PayPal = select,DIRECT,🇺🇲 美国自动,🚀 节点选择,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Paypal.png
💭 微信服务 = select,DIRECT,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/WeChat.png
🍿 国外媒体 = select,🚀 节点选择,♻️ 自动选择,DIRECT,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Streaming.png
🎮 游戏 = select,🇸🇬 新加坡自动,🇺🇲 美国自动,🚀 节点选择,♻️ 自动选择,✍️ 手动切换,DIRECT,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/GAME.png
📺 TVB = select,DIRECT,🎬 流媒体解锁,🚀 节点选择,♻️ 自动选择,✍️ 手动切换,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/TVB.png
🎯 全球直连 = select,DIRECT,🚀 节点选择,♻️ 自动选择,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Direct.png
🛑 全球拦截 = select,REJECT,DIRECT,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Adblock.png
🍃 应用净化 = select,REJECT,DIRECT,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Adguard.png
# 漏网之鱼策略组不再需要，由 FINAL 规则指向兜底后备策略

# --------------------------------
# 节点筛选定义 (使用 select + policy-regex-filter)
# 使用原 Surge 配置中的 policy-path
🇸🇬 新加坡节点 = select, policy-path=https://sub.store/download/collection/ZH?target=Surge, policy-regex-filter="^(?=.*((?i)🇸🇬|新加坡|狮|(\b(SG|Singapore)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$"
🇭🇰 香港节点 = select, policy-path=https://sub.store/download/collection/ZH?target=Surge, policy-regex-filter="^(?=.*((?i)🇭🇰|香港|(\b(HK|Hong)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$"
🇺🇲 美国节点 = select, policy-path=https://sub.store/download/collection/ZH?target=Surge, policy-regex-filter="^(?=.*((?i)🇺🇸|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|(\b(US|United States)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$"
🌍 其他节点 = select, policy-path=https://sub.store/download/collection/ZH?target=Surge, policy-regex-filter="^(?=.*((?i)🇯🇵|🇰🇷|🇹🇼|🇦🇺|🇬🇧|🇩🇪|🇫🇷|🇮🇳|🇮🇹|日本|台湾|韩国|法国|德国|英国|俄罗斯|加拿大|巴西|印度|泰国|越南|菲律宾|印尼|阿根廷|西班牙|土耳其|卢森堡|匈牙利|波兰|埃及|以色列|马来西亚|摩纳哥|尼日利亚|巴基斯坦|沙特|瑞典|瑞士|荷兰|阿联酋|南非|川日|东京|大阪|泉日|埼玉|韓|首尔|墨西哥|(\b(JP|Japan|KR|Korea|TW|Taiwan|AU|UK|DE|FR|IT|RU|CA|BR|IN|TH|VN|PH|ID|AR|ES|TR|LU|HU|PL|EG|IL|MY|MC|NG|PK|SA|SE|CH|NL|AE|ZA|MX)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$"
全球节点 = select, policy-path=https://sub.store/download/collection/ZH?target=Surge, policy-regex-filter="^(?=.*(.))(?!.*((?i)群|邀请|返利|循环|官网|客服|网站|网址|获取|订阅|流量|到期|机场|下次|版本|官址|备用|过期|已用|联系|邮箱|工单|贩卖|通知|倒卖|防止|国内|地址|频道|无法|说明|使用|提示|特别|访问|支持|(\b(USE|USED|TOTAL|EXPIRE|EMAIL|Panel)\b|(\d{4}-\d{2}-\d{2}|\dG)))).*$"
游戏节点 = select, policy-path=https://sub.store/download/collection/ZH?target=Surge, policy-regex-filter="^(?=.*((?i)游戏|🎮|(\b(GAME)(\d+)?\b)))(?!.*((?i)回国|校园)).*$"
AI解锁节点 = select, policy-path=https://sub.store/download/collection/ZH?target=Surge, policy-regex-filter="^(?=.*((?i)openai|ai解锁|chatgpt|智能|ai|gpt))(?!.*((?i)回国|校园)).*$"
流媒体解锁节点 = select, policy-path=https://sub.store/download/collection/ZH?target=Surge, policy-regex-filter="^(?=.*((?i)流媒体|解锁|netflix|disney|hulu|hbo|prime|youtube))(?!.*((?i)回国|校园)).*$"

[Rule]
# Loon Local Rules
DOMAIN,10.8.0.1,DIRECT
IP-CIDR,10.8.0.0/24,DIRECT
DOMAIN,chat.signal.org,🇺🇲 美国自动 # Mapped to 🇺🇲 美国自动
# Loon Remote Rules
# 广告和隐私拦截规则
RULE-SET,https://raw.githubusercontent.com/bendusy/RulesForMe/main/rulesets/classical/reject_domains.list,🛑 全球拦截,update-interval=86400
RULE-SET,https://raw.githubusercontent.com/bendusy/RulesForMe/main/rulesets/classical/reject_domains.list,🍃 应用净化,update-interval=86400

# 本地网络和直连规则
RULE-SET,https://raw.githubusercontent.com/bendusy/RulesForMe/main/rulesets/classical/direct_all.list,🎯 全球直连,update-interval=86400
RULE-SET,https://raw.githubusercontent.com/bendusy/RulesForMe/main/rulesets/custom/argotunnel.list,🎯 全球直连,update-interval=86400
RULE-SET,https://raw.githubusercontent.com/bendusy/RulesForMe/main/rulesets/geosite/ChinaDomain.list,🎯 全球直连,update-interval=86400
RULE-SET,https://raw.githubusercontent.com/bendusy/RulesForMe/main/rulesets/geoip/ChinaCompanyIp.list,🎯 全球直连,update-interval=86400

# 系统服务和特殊应用
RULE-SET,https://raw.githubusercontent.com/bendusy/RulesForMe/main/rulesets/classical/apple_domains.list,🍎 苹果服务,update-interval=86400
RULE-SET,https://raw.githubusercontent.com/bendusy/RulesForMe/main/rulesets/custom/WeChat.list,💭 微信服务,update-interval=86400
RULE-SET,https://raw.githubusercontent.com/bendusy/RulesForMe/main/rulesets/classical/Cloudflare.list,☁️ Cloudflare,update-interval=86400

# 常用服务规则
RULE-SET,https://raw.githubusercontent.com/bendusy/RulesForMe/main/rulesets/classical/ai_all.list,💬 OpenAi,update-interval=86400
RULE-SET,https://raw.githubusercontent.com/bendusy/RulesForMe/main/rulesets/custom/aioai.list,💬 OpenAi,update-interval=86400
RULE-SET,https://raw.githubusercontent.com/bendusy/RulesForMe/main/rulesets/classical/github.list,🤿 GitHub,update-interval=86400
RULE-SET,https://raw.githubusercontent.com/bendusy/RulesForMe/main/rulesets/classical/youtube.list,📹 油管视频,update-interval=86400
RULE-SET,https://raw.githubusercontent.com/bendusy/RulesForMe/main/rulesets/classical/microsoft.list,Ⓜ️ 微软服务,update-interval=86400
RULE-SET,https://raw.githubusercontent.com/bendusy/RulesForMe/main/rulesets/classical/tiktok.list,♫️ TikTok,update-interval=86400
RULE-SET,https://raw.githubusercontent.com/bendusy/RulesForMe/main/rulesets/classical/telegram.list,📲 电报信息,update-interval=86400
RULE-SET,https://raw.githubusercontent.com/bendusy/RulesForMe/main/rulesets/classical/netflix.list,🎥 Netflix,update-interval=86400
RULE-SET,https://raw.githubusercontent.com/bendusy/RulesForMe/main/rulesets/custom/notion.list,🗒️ Notion,update-interval=86400
RULE-SET,https://raw.githubusercontent.com/bendusy/RulesForMe/main/rulesets/custom/tvb.list,📺 TVB,update-interval=86400
RULE-SET,https://raw.githubusercontent.com/bendusy/RulesForMe/main/rulesets/classical/spotify.list,🎶 Spotify,update-interval=86400
RULE-SET,https://raw.githubusercontent.com/bendusy/RulesForMe/main/rulesets/classical/disney.list,🪄 迪士尼,update-interval=86400
RULE-SET,https://raw.githubusercontent.com/bendusy/RulesForMe/main/rulesets/classical/proxy_common.list,🍿 国外媒体,update-interval=86400

# 游戏服务
RULE-SET,https://raw.githubusercontent.com/bendusy/RulesForMe/main/rulesets/classical/gaming.list,🎮 游戏,update-interval=86400

# 代理规则和国际流量
RULE-SET,https://raw.githubusercontent.com/bendusy/RulesForMe/main/rulesets/classical/proxy_common.list,🚀 节点选择,update-interval=86400

# 补充规则 - 以下是Loon原有规则中RFM没有的
RULE-SET,https://kelee.one/Tool/Loon/Rule/LAN_SPLITTER,🎯 全球直连,update-interval=86400
RULE-SET,https://kelee.one/Tool/Loon/Rule/REGION_SPLITTER,🎯 全球直连,update-interval=86400
RULE-SET,https://rule.kelee.one/Loon/Twitter.list,🚀 节点选择,update-interval=86400
RULE-SET,https://rule.kelee.one/Loon/Facebook.list,🚀 节点选择,update-interval=86400
RULE-SET,https://rule.kelee.one/Loon/Instagram.list,🚀 节点选择,update-interval=86400
RULE-SET,https://rule.kelee.one/Loon/OneDrive.list,☁️ OneDrive,update-interval=86400
RULE-SET,https://rule.kelee.one/Loon/Google.list,🇬 谷歌服务,update-interval=86400

# Essential Rules
GEOIP,CN,🎯 全球直连
IP-CIDR,192.168.0.0/16,DIRECT,no-resolve
IP-CIDR,172.16.0.0/12,DIRECT,no-resolve
IP-CIDR,127.0.0.0/8,DIRECT,no-resolve
IP-CIDR,198.18.0.0/15,DIRECT,no-resolve # Added for Surge compatibility
FINAL,🐟 兜底后备策略,dns-failed # Use Loon's final policy